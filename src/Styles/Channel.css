.ChannelWrap {
  height: 100vh;
  width: 100vw;
  background-color: #EFDECD;
  display: flex;
  flex-direction: column;
}

/****** Channel Area ******/
.ChannelUpperBar {
  flex : 1;
  display: flex;
  /* background-color: #f5f4f1; */
  border-bottom: 1.5px solid #5f686e;
  align-items: center;
}

.ChannelElemWrap {
  flex : 10;
  /* width: 100%;
  height: calc(100vh - 9vh); */
  flex-direction: row;
  display: flex;
  /* flex-flow: row nowrap; */
  /* background-color: #2679CD; */
  overflow : hidden;
}


/****** Channel leftBar ******/

.ChannelLeftSideBarWrap {
  flex : 2;
  /* margin: 0 auto; */
  /* background-color: #ffffff; */
  border-right: 1.5px solid #5f686e;
  display : flex;
  flex-direction: column;
  /* background-color: palegoldenrod; */
  /* overflow: hidden; */
}
.dragdropTitle{
  margin-left : 10px;
  margin-top : 10px;
  font-family: 'REM', sans-serif;
  font-size: 20px;
}

.dropContainerWrapper{
  flex : 1;
  display : flex;
  align-items: center;
  justify-content: center;
  margin : 10px;
}

/* Drag and Drop */
.dropContainer {
  height: 70px;
  width: 180px;
  background-color: transparent;
  /* border-radius: 1.25rem; */
  display: flex;
  justify-content: center;
  align-items: center;
  /* border : 2px solid black; */

  border: 2px dashed black;
  padding: 20px;
  text-align: center;
}


.fileListWrapper{
  flex : 1;
  display: flex;
  flex-direction: column;
}

.fileListTitle{
  margin-left : 10px;
  margin-top : 10px;
  margin-bottom: 10px;
  font-family: 'REM', sans-serif;
  font-size: 20px;
}

.inFileListWrapper{
  /* display: 1; */
  display: flex;
  position : relative;
  /* align-items: center; */
  justify-content: center;
  align-items: center; /* 수직 가운데 정렬 추가 */
  overflow : hidden;
}

.fileList{
  width : 230px;
  height: 400px;
  border: 1px solid black;
  overflow-y: auto;
}
.fileList::-webkit-scrollbar{
  display: none;
}

.progressContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* background-color: rgba(255, 255, 255, 0.8); progress가 가려지는 것을 가시성 좋게 하기 위해 배경 추가 */
  z-index: 1; /* ListItem 아래에 배치하기 위해 z-index 설정 */
}

/* .fileListProgress{
  position: absolute;
  top: 50%;
  left: 50%;
  width : 30px;
  height : 30px;
  transform: translate(-50%, -50%);
} */

/*********** ChannelMain *********/
.ChannelMainWrap {
  flex : 6;
  height: auto;
  /* overflow: auto; */
  /* margin: 0 auto; */
  /* background-color: #f5f4f1; */
  /* background-color: palegoldenrod; */
  /* overflow: hidden; */
}

.dumpChat {
  position: absolute;
  /* background-color: red; */
  /* background-color: #f5f4f1; */

  height: 100px;
  width: 100%;
  margin-top: auto;
  z-index: 0;
}




/**************  ChannelRightSideBar ****************/

.ChannelRightSideBarWrap {
  flex : 2;
  border-left : 1px solid black;
  /* height: 100%; */
  /* margin: 0 auto; */
  /* background-col or: #ffc106; */
  /* background-color: palegoldenrod; */
  /* overflow: hidden; */
}

.bookMarkTitle{
  margin-left : 10px;
  margin-top : 10px;
  font-family: 'REM', sans-serif;
  font-size: 20px;
}

.bookMarkListWrapper{
  
}






/* .plusCircleImg {
  height: 30px;
  width: 30px;
  background-image: url("../../public/static/img/FilePlusBtn2.png");
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
} */

/* .ChatBarWarp{
  position: fixed;
  bottom: 30;
  left: 50%;
  transform: translateX(-50%);
  width: 500px;
  z-index: 1000;
} */



.BookMarkModal{
  margin-top: 12.5%;
  margin-left: 25%;
  height: 50%;
  width: 50%;
  background-color: #f5f4f1;
  border-radius: 20px;
}

.BookMarkModalChat{
  display: flex;
  margin: 1%;
  height: 97%;
  width: 50%;
}
/* 폰트 사이즈 */
.BookMarkFont{
  font-size: 18px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}


/* const scrollRef = useRef();
  const chatDiv = document.getElementById(".ChatRoom"); //영역 불러오기
  const nowScrollY = chatDiv.scrollTop; // 현재 스크롤 위치
  const scrollHeight = chatDiv.scrollHeight; // 맨 아래 있을 때 위치

  const scrollToBottom = () =>{
    scrollRef.current.scrollTop = scrollRef.current
  }

  return (
    <div className="ChatRoom" style={{ position: 'relative' }} ref={scrollRef}>
      <Grid container spacing={0}>
        {chatMessages.map((chatMessage) => (
          <Grid item xs={12} sm={12} md={12} key={chatMessage}>
            <ChannelCard chatMessage={chatMessage} />
          </Grid>
        ))}
      </Grid>
      <ChatBar channelId={channelId} addMessage={addMessage} scrollToBottom={scrollToBottom}></ChatBar>
      <div className="dumpChat"></div>
    </div >
  ); */
